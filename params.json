{"name":"Node-express-grunt-boilerplate","tagline":"A boilerplate to start a new express project based on CoffeeScript, Grunt build system, forever runner, Jade Template Engine and bootstrap","body":"# node-express-grunt-boilerplate\r\n\r\nA boilerplate to start a new express project based on CoffeeScript, Grunt build system, pm2, Jade Template Engine and bootstrap.\r\n\r\nAny suggestions or pull-requests are welcomed!\r\n\r\n\r\n## Usage\r\n\r\n### Preparing\r\n    first, fork this repository!\r\n    git clone git@github.com:{YOUR USERID}/node-express-grunt-boilerplate.git\r\n    cd node-express-grunt-boilerplate\r\n    npm install\r\n    cp config.sample.coffee config.coffee (Modify port number if need)\r\n\r\n### Development\r\n    grunt\r\n\r\n### Production\r\n\r\n#### Starting Server\r\n    grunt production\r\n\r\n\r\n#### Stopping Server\r\n    pm2 stop app_id    # type 'pm2 list' to get app_id\r\n\r\n#### Restarting server\r\n    pm2 restart app_id    # type 'pm2 list' to get app_id\r\n\r\n#### Zero downtime restart\r\n    pm2 reload app_id    # type 'pm2 list' to get app_id\r\n\r\n## Folder Tree\r\n    assets\r\n        vendor\r\n        images\r\n        coffeescripts\r\n        less\r\n    routes\r\n    views\r\n\r\n## How to keep updated from this repository\r\nYou will fork this repository, and do works on your fork. Meanwhile, we'll do our own work on this repository and sometimes you want to merge our changes into your repository. You can do just following steps:\r\n\r\n    # at your repository folder,\r\n    git remote add boilerplate git@github.com:eunjae-lee/node-express-grunt-boilerplate.git\r\n    git fetch boilerplate\r\n    git branch boilerplate boilerplate/master\r\n\r\nThe steps above will create a branch named \"boilerplate\" pointing boilerplate repository.\r\nWhen we update some stuff, you can checkout boilerplate branch and pull the stuff, and merge into your develop, master, etc like following:\r\n\r\n    # ex> current branch : master\r\n    git checkout boilerplate\r\n    git pull\r\n    git checkout master\r\n    git merge boilerplate\r\n\r\n## More Guide\r\nBasically files under \"assets\" folder are copied, minified or converted to \"public\" folder, and node app's static path is set to \"public\".\r\n\r\n* Files under the following folders will be just copied to /public\r\n  * assets/vendor\r\n  * assets/images\r\n    * To compress images, run \"grunt imagecomp\"\r\n  * assets/javascripts\r\n    * and also uglified to \"\\*.min.js\"\r\n  * assets/stylesheets\r\n    * and also minified to \"\\*.min.css\"\r\n* Files under \"assets/coffeescripts\" will be converted to \"\\*.js\" and \"\\*.min.js\" at \"/public/javascripts\"\r\n* Files under \"assets/less\" will be converted to \"\\*.css\" and \"\\*.min.css\" at \"/public/stylesheets\"\r\n\r\n## Example\r\n    /assets\r\n        /vendor\r\n            /bootstrap-3.0.0\r\n                /css\r\n                \t/bootstrap.css\r\n\t                /bootstrap.min.css\r\n                /js\r\n                    /bootstrap.js\r\n                    /bootstrap.min.js\r\n        /images\r\n            /bg.png\r\n        /javascripts\r\n            /login\r\n                /login.js\r\n        /coffeescripts\r\n            /login\r\n                /helper.coffee\r\n        /stylesheets\r\n            /login\r\n                /login.css\r\n        /less\r\n            /login\r\n                /test.less\r\n\r\nwill be converted to\r\n\r\n    /public\r\n        /vendor\r\n            /bootstrap-3.0.0\r\n                /css\r\n                \t/bootstrap.css (just copied)\r\n\t                /bootstrap.min.css (just copied)\r\n                /js\r\n                    /bootstrap.js (just copied)\r\n                    /bootstrap.min.js (just copied)\r\n        /images\r\n            /bg.png (just copied)\r\n        /javascripts\r\n            /login\r\n                /login.js (just copied)\r\n                /login.min.js (uglified from login.js)\r\n                /helper.js (converted from helper.coffee)\r\n                /helper.min.js (converted from helper.coffee)\r\n        /stylesheets\r\n            /login\r\n                /login.css (just copied)\r\n                /login.min.css (minified from login.css)\r\n                /test.css (converted from test.less)\r\n                /test.min.css (converted from test.less)\r\n\r\nAnd now you can access those static files like following\r\n\r\n    http://hostname:port/assets/bootstrap-3.0.0/css/bootstrap.css\r\n    http://hostname:port/images/bg.png\r\n    http://hostname:port/javascripts/login/login.min.js\r\n    http://hostname:port/stylesheets/login/test.min.css\r\n\r\nSo basically\r\n\r\n* \"javascripts\" and \"coffeescripts\" are merged into \"javascripts\".\r\n* \"stylesheets\" and \"less\" are merged into \"stylesheets\".\r\n* And the others are just copied into \"public\".\r\n\r\n## Tips & Tricks\r\n\r\n### \"env\" variable at render options\r\nWhen rendering views, you have to set options obj like\r\n\r\n    res.render \"index\", {\r\n    \ttitle: \"Index Page\"\r\n\t\tusername: \"Eunjae Lee\"\r\n    }\r\n\r\nHowever, this boilerplate uses a library [render-options-injector](https://github.com/eunjae-lee/render-options-injector) to automatically inject app's environment setting(development, production, ...). So you just can use \"env\" variable at view templates like following code.\r\n\r\n    # index.jade\r\n    if (env == \"development\")\r\n        script(src='/javascripts/index.js')\r\n    else\r\n        script(src='/javascripts/index.min.js')\r\n\r\nAnd this is how the boilerplate made it work.\r\n\r\n    # app.coffee\r\n    injector = require 'render-options-injector'\r\n    ...\r\n    ...\r\n    injector.inject(app, {'env': app.settings.env, 'or': 'other values'})\r\n    ...\r\n    http.createServer(...\r\n    \r\n### Error: SSL Error: CERT_UNTRUSTED\r\n\r\n    npm config set strict-ssl false\r\n    \r\nCheck out [this link](http://stackoverflow.com/questions/9626990/receiving-error-error-ssl-error-self-signed-cert-in-chain-while-using-npm).\r\n\r\n## License\r\n[MIT](http://opensource.org/licenses/mit-license.html)\r\n\r\n\r\n## Contributors\r\n\r\n* [Chris McKnight](https://github.com/cmckni3)\r\n\r\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/eunjae-lee/node-express-grunt-boilerplate/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}